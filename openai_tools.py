import csv
import os
import pickle
import time
from datetime import datetime

import numpy as np


class OpenAITextEmbeddingDB:
    # A quick brown fox jump over the lazy dog
    arr1 = [-0.008165569044649601, 0.006291043478995562, -0.012001951225101948, -0.003452744334936142,
            -0.013524028472602367, 0.01843958906829357, -0.020597944036126137, -0.00899522565305233,
            -0.007635336834937334, -0.030216971412301064, 0.020173758268356323, 0.01786569133400917,
            0.020760131999850273, 0.0018838822143152356, 0.006917964667081833, -0.009038891643285751,
            0.030591251328587532, -0.005526886321604252, 0.011771144345402718, -0.00923850852996111,
            -0.018489493057131767, 0.019662240520119667, -0.002724455436691642, -0.002885084366425872,
            0.0071674855425953865, 0.015083533711731434, 0.006004094611853361, -0.006000975612550974,
            -0.007161247543990612, 0.0005236038123257458, 0.01847701705992222, -0.0011423374526202679,
            -0.0338599756360054, -0.000905292690731585, -0.009020177647471428, -0.01576971635222435,
            -0.008365185000002384, -0.0025248387828469276, 0.022743823006749153, -0.04478898644447327,
            0.014871440827846527, 0.02209506928920746, -0.020048998296260834, -0.013386791571974754,
            0.002119367476552725, 0.010904059745371342, 0.014746679924428463, -0.013074890710413456,
            -0.02486474998295307, 0.011278340592980385, -0.0007470029522664845, 0.012026903219521046,
            -0.008333995006978512, -0.007354625966399908, -0.010785537771880627, -0.0009949642699211836,
            -0.00830280501395464, 0.004572468809783459, 0.013212127611041069, -0.005848144181072712,
            0.004048475064337254, 0.010311448015272617, -0.005096462555229664, -0.002464018063619733,
            -0.0013076449977234006, -0.011328245513141155, 0.010267782025039196, -0.0007466130773536861,
            -0.015981808304786682, 0.0012444850290194154, 0.01610656827688217, -0.0006600605556741357,
            0.0024780535604804754, 0.0058949291706085205, 0.0315394327044487, -0.006917964667081833,
            -0.035107579082250595, 0.014734203927218914, 0.021072033792734146, 0.010411255992949009,
            0.028919462114572525, -0.03695403411984444, -0.0062380204908549786, 0.017229411751031876,
            0.022232305258512497, 0.0058949291706085205, -0.024228472262620926, 0.030067259445786476,
            -0.01484648883342743, 0.00378024042584002, 0.00023918910301290452, 0.03036668337881565,
            0.005536243319511414,
            -0.0033217458985745907, -0.016992367804050446, 0.0009707919089123607, -0.006843108218163252,
            0.01871406100690365, -0.012363756075501442, -0.03303655609488487, 0.006053999066352844,
            -0.005214984994381666, -0.026249589398503304, 0.0002329510753042996, 0.008421327918767929,
            -0.026249589398503304, -0.012020665220916271, 0.018165115267038345, 0.019138246774673462,
            -0.007691479288041592, 0.012132950127124786, 0.013286983594298363, 0.01649332605302334,
            -0.036280326545238495, -0.0002345105749554932, 0.0002649209345690906, 0.014921344816684723,
            -0.008689562790095806, -0.009662693366408348, -0.009088795632123947, 0.012338804081082344,
            0.028595086187124252, 0.02350486069917679, -0.004142045509070158, -0.015557622537016869,
            -0.009893500246107578, 0.0029537025839090347, -0.001486208406277001, -0.010361352004110813,
            -0.002042951760813594, 0.0315643846988678, 0.023642096668481827, 0.024739988148212433,
            -0.009275936521589756,
            -0.0396987609565258, 0.025550931692123413, 0.007697717286646366, 0.003696027211844921,
            -0.023454956710338593,
            -0.019587384536862373, 0.006724586244672537, 0.021783167496323586, -0.007073915097862482,
            0.001193801173940301, 0.019362814724445343, 0.02548855170607567, 0.010305210016667843,
            -0.004120212513953447,
            0.0025466717779636383, -0.014609443955123425, 0.014921344816684723, 0.0027587644290179014,
            0.03495786711573601, 0.0016000522300601006, 0.00869580078870058, 0.014310019090771675,
            0.004666039254516363,
            0.01670541800558567, -0.026000069454312325, -0.013998118229210377, 0.025700643658638,
            0.022606585174798965,
            -0.004251210950314999, -0.011970761232078075, -0.0024016378447413445, 0.022631539031863213,
            0.027297576889395714, -0.00461301626637578, 0.013249555602669716, -0.008296567015349865,
            0.0025763025041669607, 0.03128990903496742, -0.013511552475392818, 0.0339098796248436,
            -0.00505591556429863,
            0.01157152745872736, 0.009949642233550549, -0.009762502275407314, -0.030117163434624672,
            0.0004120992380194366, -0.003200104460120201, 0.015570099465548992, 0.035107579082250595,
            0.020760131999850273, 0.004447708372026682, 0.027971284464001656, 0.010473635978996754,
            -0.03191371262073517,
            -0.0014971249038353562, 0.00020254073024261743, 0.005062153562903404, 0.005305436439812183,
            -0.011989475227892399, -0.013923261314630508, -0.6874797344207764, -0.021932879462838173,
            0.009600313380360603, -0.007597908843308687, 0.020523088052868843, 0.03178895264863968,
            -0.01033016201108694,
            -0.012326328083872795, 0.006044641602784395, 0.031464576721191406, -0.030192019417881966,
            0.0054208398796617985, 0.0037958354223519564, -0.0048375846818089485, -0.006749538239091635,
            -0.0038582156412303448, 0.02896936610341072, -0.020061474293470383, -0.009076319634914398,
            0.01649332605302334, 0.0030176423024386168, 0.009918452240526676, -0.011584004387259483,
            -0.0010238151298835874, -0.0016671109478920698, 0.00846499390900135, 0.0015602848725393414,
            0.0022940319031476974, 7.665942393941805e-05, 0.013124794699251652, 0.002007083036005497,
            0.013037462718784809, -0.014821536839008331, 0.005458267871290445, 0.05224965885281563,
            -0.0004378310695756227, 0.0002906527661252767, 0.018901202827692032, 0.031364765018224716,
            0.05195023491978645, -0.033835023641586304, -0.00484694167971611, 0.014347447082400322,
            0.0019213103223592043, -0.019537480548024178, -0.0015150592662394047, 0.02346743270754814,
            0.014160306192934513, 0.00015058970893733203, -0.02033594623208046, 0.004778323695063591,
            0.020972223952412605, 0.020398326218128204, 0.004759609699249268, -0.018077783286571503,
            0.022369541227817535, 0.01775340549647808, 0.008284091018140316, 0.0068867746740579605,
            -0.0010604634881019592, -0.007822477258741856, 0.003312388900667429, -0.013573932461440563,
            0.015270673669874668, -0.023854190483689308, -0.0026059329975396395, -0.009556647390127182,
            0.015333054587244987, 0.017578741535544395, -0.016293710097670555, 0.015707336366176605,
            0.02185802347958088,
            -0.017453981563448906, 0.00747314840555191, 0.014347447082400322, 0.00674330024048686,
            0.0012873715022578835,
            -0.007173723541200161, -0.016393518075346947, 0.010005785152316093, -0.01426011510193348,
            -0.002663634717464447, -0.033360932022333145, 0.004154521506279707, 0.029717929661273956,
            0.015557622537016869, -0.033111412078142166, -0.010199163109064102, -0.003012963803485036,
            -0.021870499476790428, 0.018888724967837334, 0.02909412793815136, -0.03538205102086067,
            0.003115891246125102,
            -0.007735145278275013, 0.0040952605195343494, -0.012719323858618736, 0.041170936077833176,
            0.04241853952407837, -0.02525150589644909, 0.009076319634914398, -0.0034059591125696898,
            -0.008390137925744057, -0.009643979370594025, 0.011758668348193169, 0.025750547647476196,
            0.019188150763511658, 0.00555183831602335, 0.024852273985743523, -0.0096502173691988,
            -0.00805952213704586,
            -0.018302351236343384, 0.02115936577320099, 0.009257222525775433, -0.0065686353482306,
            -0.02276877500116825,
            0.012114236131310463, -0.005604861304163933, 0.012519706971943378, -0.022132497280836105,
            0.011484195478260517, -0.012594562955200672, 0.014447255060076714, 0.00645635137334466,
            0.00935079250484705,
            0.005074629560112953, -0.03410949558019638, -0.027522146701812744, -0.011671336367726326,
            -0.010691966861486435, -0.00645635137334466, 0.022282209247350693, 0.029393551871180534,
            -0.0047845616936683655, -0.00280399015173316, -0.00823418702930212, 0.010891583748161793,
            0.009151175618171692, 0.017728453502058983, -0.010536016896367073, -0.023791810497641563,
            0.01004321314394474, -0.005083986558020115, -0.018027879297733307, 0.0026402422226965427,
            -0.020298518240451813, -0.026324445381760597, -0.004126450512558222, 0.0065436833538115025,
            0.02979278564453125, -0.019537480548024178, -0.020273566246032715, -0.009400696493685246,
            -0.013162222690880299, 0.01542038656771183, -0.009450601413846016, -0.032512564212083817,
            -0.005720264744013548, -0.010074403136968613, -0.033136364072561264, 0.037577833980321884,
            0.0059074051678180695, -0.0008873583865351975, 7.826766523066908e-05, 0.007142533548176289,
            -0.030092211440205574, 0.00695539265871048, 0.024727512151002884, -0.025525979697704315,
            -0.019699668511748314, -0.011222198605537415, -0.024153614416718483, -0.010866631753742695,
            -0.001426167436875403, -0.01740407757461071, 0.009082557633519173, -0.024116186425089836,
            -0.02852023020386696, -0.00528672244399786, -0.010149259120225906, -0.005941714625805616,
            0.01419773418456316, 0.007136295549571514, -0.01892615482211113, 0.013773549348115921,
            -0.0011743073118850589, 0.02311810292303562, 0.021059557795524597, -0.019188150763511658,
            -0.011783620342612267, 0.024340756237506866, 0.03071601316332817, 0.009662693366408348,
            -0.004251210950314999, -0.0005918322131037712, -0.018888724967837334, 0.0036430039908736944,
            0.0251017939299345, 0.012020665220916271, 0.01408545020967722, 0.012457326985895634,
            -0.007722669281065464,
            0.005049677565693855, -0.03341083601117134, 0.029817737638950348, -0.03201352059841156,
            0.007853668183088303,
            -0.00411709351465106, 0.005190032999962568, -0.0016827060608193278, -0.0192754827439785,
            0.0032905556727200747, 0.01542038656771183, -0.029618121683597565, 0.01973709650337696,
            0.022494301199913025,
            -0.012500992976129055, 0.023654572665691376, 0.006500017363578081, -0.01775340549647808,
            0.00322817568667233,
            -0.012875273823738098, 0.014447255060076714, -0.009132461622357368, 0.01881386898458004,
            0.01717950776219368,
            0.010448683984577656, 0.016979891806840897, -0.003025439800694585, -0.006041522603482008,
            -0.026723679155111313, 0.0033560548909008503, 0.02031099423766136, 0.013262031599879265,
            0.010361352004110813, -0.010255306027829647, 0.00835894700139761, -0.010336400009691715,
            0.015345530584454536, 0.0045163268223404884, 0.018514445051550865, -0.0029427860863506794,
            0.005916762165725231, -0.017204459756612778, 0.01046739798039198, 0.012987558729946613,
            0.023991426452994347,
            -0.0011205044575035572, -0.016430946066975594, 0.0027135389391332865, -0.0021443194709718227,
            -0.007142533548176289, -0.024166090413928032, 0.03201352059841156, 0.011016343720257282,
            -0.01660561002790928, 0.012787941843271255, 0.0013481922214850783, 0.022257257252931595,
            0.025089317932724953, 0.010030737146735191, -0.00035303295589983463, 0.010810489766299725,
            0.009275936521589756, 0.02266896702349186, -0.0022612824104726315, -0.011577766388654709,
            0.010810489766299725, 0.01192085724323988, -0.03106534108519554, -0.02431580424308777,
            -0.0021365219727158546, -0.0037584074307233095, -0.010479873977601528, 0.024240948259830475,
            0.01786569133400917, -0.035357099026441574, 0.02009890228509903, 0.019549956545233727,
            0.02243192121386528,
            -0.025525979697704315, -0.029168983921408653, -0.0007181520923040807, 0.0065312073566019535,
            -0.0027306934352964163, 0.0051401290111243725, -0.021171841770410538, 0.0003928003425244242,
            -6.038208812242374e-05, 0.02314305491745472, -0.004460184834897518, 0.0007781930617056787,
            -0.0035556715447455645, -0.0011368792038410902, -0.006687157787382603, -0.01658065803349018,
            0.019100818783044815, -0.004232496954500675, -0.006203711498528719, -0.02500198595225811,
            0.013274507597088814, -0.0025934570003300905, -0.004332305397838354, -0.009905976243317127,
            0.025263981893658638, 0.0007544105756096542, -0.010660776868462563, -0.0032905556727200747,
            0.003948667086660862, 0.018302351236343384, -0.01588200032711029, -0.008165569044649601,
            -0.012837845832109451, 0.012975082732737064, -0.002292472403496504, -0.007335911970585585,
            -0.026224637404084206, -0.012001951225101948, 0.025700643658638, 0.014135354198515415,
            -0.00605087960138917,
            -0.013386791571974754, -0.006911726668477058, 0.019075866788625717, 0.09032653272151947,
            0.023978950455784798, -0.012476040981709957, 0.016742845997214317, 0.015345530584454536,
            -0.019724620506167412, -0.022232305258512497, -0.009537933394312859, 0.023642096668481827,
            -0.008602229878306389, -0.0015610646223649383, -0.0065935878083109856, 0.002842977875843644,
            -0.00402976106852293, 0.02440313622355461, -0.012232758104801178, 0.010579682886600494,
            -0.013049938715994358, 0.0038426206447184086, -0.0036804319825023413, -0.0007544105756096542,
            0.0017762762727215886, 0.0009926250204443932, 0.005427077878266573, -0.016044188290834427,
            0.006231782492250204, -0.008751942776143551, 0.019001010805368423, 0.01941271871328354,
            -0.03141467273235321,
            0.0016172068426385522, 0.01128457859158516, 0.012338804081082344, 0.004110855516046286,
            0.021870499476790428,
            0.010748108848929405, -0.0033997211139649153, 0.023317720741033554, 0.032637324184179306,
            -0.024615228176116943, 0.01600676029920578, 0.012688133865594864, 0.0024811725597828627,
            0.01034263800829649,
            0.023891618475317955, -0.0005466065485961735, -0.028220804408192635, 0.007173723541200161,
            0.008945321664214134, -0.029717929661273956, 0.031389717012643814, -0.005941714625805616,
            -0.010486111976206303, 0.00922603253275156, 0.008221711032092571, 0.025288935750722885,
            -0.008976511657238007, 0.0009364828001707792, -0.011365673504769802, -0.008159331046044827,
            -0.011234674602746964, -0.017578741535544395, -0.009750026278197765, -0.00986854825168848,
            0.005068391561508179, -0.026199685409665108, -0.016655514016747475, -0.011178532615303993,
            -0.006172521039843559, -0.016418470069766045, -0.01868910901248455, -0.02464018017053604,
            -0.017341697588562965, -0.001334156608209014, 0.010348876006901264, 0.026698727160692215,
            0.0039954520761966705, -0.010186687111854553, 0.006184997037053108, 0.0017965498846024275,
            -0.012644467875361443, -0.005632932297885418, 0.004304233938455582, -0.029942497611045837,
            0.007922286167740822, 0.004815751686692238, 0.015931904315948486, -0.009762502275407314,
            0.002827382879331708, 0.017341697588562965, 0.015557622537016869, 0.004528802819550037,
            -0.002747847931459546, 0.00587309617549181, 0.021309077739715576, -0.008882940746843815,
            0.01424763910472393,
            0.03705384209752083, 0.013037462718784809, 0.0021723906975239515, 0.033810071647167206,
            -0.02057299204170704,
            -0.002679229713976383, -0.0004998213844373822, 0.008714514784514904, -0.005327269434928894,
            0.030441539362072945, -0.0032936749048531055, -0.026723679155111313, -0.019936712458729744,
            0.016430946066975594, -0.0075230528600513935, 0.01634361408650875, 0.003618051763623953,
            0.01034263800829649,
            0.017578741535544395, 0.019699668511748314, 0.013212127611041069, -0.007498100399971008,
            -0.013798501342535019, -0.002495208289474249, -0.02150869369506836, 0.0002664804342202842,
            0.024390660226345062, -0.025975117459893227, 0.01952500455081463, -0.007766335271298885,
            -0.01833977922797203, 0.001069820486009121, 0.0057015507481992245, 0.009787454269826412,
            0.0034153161104768515, -0.002916274592280388, -0.010492349974811077, -0.042693011462688446,
            -0.011945809237658978, -0.0026371232233941555, 0.014285067096352577, -0.018763964995741844,
            -0.00592611962929368, -0.030591251328587532, 0.002339257625862956, 0.011902143247425556,
            -0.0408964604139328,
            0.017491409555077553, -0.028120996430516243, -0.0036024567671120167, -0.0056017423048615456,
            -0.00830280501395464, 0.008440041914582253, -0.006256734486669302, -0.007398292422294617,
            -0.02417856641113758, -0.00870827678591013, -0.00082497822586447, -0.03645499050617218,
            0.01069820486009121,
            -0.010380065999925137, 0.03890029713511467, 0.019774524495005608, 0.033485691994428635,
            -0.0071799615398049355, 0.0036430039908736944, 0.024253424257040024, -0.0262994933873415,
            -0.0035151245538145304, 0.006805680226534605, -0.018414637073874474, -0.013648788444697857,
            -0.006768252234905958, 0.033236172050237656, 0.008415089920163155, 0.03333598002791405,
            0.01858930103480816,
            -0.01847701705992222, 0.006805680226534605, -0.007604146841913462, 0.002033594762906432,
            -0.007697717286646366, -0.01348660048097372, 0.020123854279518127, -0.014160306192934513,
            0.006662205792963505, -0.0033311028964817524, -0.012525944970548153, -0.0068992506712675095,
            0.00840885192155838, 0.029019271954894066, 0.030815821141004562, 0.009843596257269382,
            0.023978950455784798,
            0.00583878718316555, -0.004943631123751402, 0.003000487806275487, -0.01091653574258089,
            -0.023667048662900925, -0.0001323629985563457, 0.011577766388654709, 0.01162143237888813,
            0.02934364788234234, 0.0013910785783082247, 0.01646837405860424, -0.013436696492135525,
            0.03049144335091114,
            0.001966536045074463, 0.01045492198318243, -0.003067546524107456, -0.017266839742660522,
            -0.001685825060121715, -0.025064365938305855, -0.007785049732774496, -0.04007304459810257,
            -0.014871440827846527, -0.02782157063484192, 0.007866144180297852, 0.0245278961956501,
            -0.007972190156579018,
            0.01449715904891491, -0.009718836285173893, -0.037103746086359024, -0.00484694167971611,
            0.002347055124118924, 0.03987342491745949, -0.011883429251611233, 0.0192754827439785,
            0.01613152027130127,
            0.00012836676614824682, 0.003499529557302594, 0.020061474293470383, 0.006724586244672537,
            0.004076546523720026, 0.0021817476954311132, 0.015956856310367584, -0.006359661929309368,
            -0.007747621275484562, -0.03141467273235321, -0.0013224603608250618, -0.025675691664218903,
            -0.0065935878083109856, 0.028719846159219742, -0.0027260149363428354, -0.0008787811384536326,
            -0.011783620342612267, -0.012850321829319, 0.0002271029370604083, 0.011596480384469032,
            -0.014821536839008331, -0.00587309617549181, -0.032762084156274796, -0.0018729656003415585,
            -0.04264310747385025, 0.010442445985972881, -0.020398326218128204, 0.0012195330346003175,
            -0.027871474623680115, -0.004032880067825317, 0.010798013769090176, 0.013536504469811916,
            -0.023766858503222466, -0.005068391561508179, -0.014696775935590267, 0.01716703176498413,
            -0.019450148567557335, -0.000755190325435251, 0.013998118229210377, 0.003225056454539299,
            -0.018264923244714737, -0.017341697588562965, -0.0061226170510053635, 0.026324445381760597,
            -0.01268189586699009, -0.01739160157740116, -0.005180676002055407, 0.01465934794396162,
            0.01636856608092785,
            -0.016181424260139465, 0.0030176423024386168, -0.02230716124176979, -0.004672277253121138,
            0.013224603608250618, 0.016568182036280632, -0.007859906181693077, -0.00583878718316555,
            0.00865213479846716,
            -0.012301376089453697, 0.00257162400521338, -0.0017435266636312008, -0.014509635977447033,
            0.008957797661423683, -0.026099877431988716, -0.0014947856543585658, -0.01600676029920578,
            -0.00514324801042676, 0.0027743596583604813, 0.02093479596078396, -0.000456545123597607,
            0.0026745512150228024, 0.016655514016747475, -0.03513253107666969, 0.016393518075346947,
            -0.022020211443305016, 0.012295138090848923, -0.01740407757461071, 0.01542038656771183,
            0.016381042078137398,
            0.0074606724083423615, 0.014584491960704327, -0.014160306192934513, 0.0005368596175685525,
            -0.030167067423462868, -0.00807199813425541, -0.005274246446788311, 0.014334971085190773,
            -0.02501446194946766, 0.005738978739827871, -0.0010004225187003613, 0.006284805480390787,
            -0.022469349205493927, -0.0003391923673916608, 0.03236284852027893, -0.00011540338164195418,
            0.020286042243242264, 0.03518243506550789, -0.018951106816530228, 0.006843108218163252,
            0.0007661068812012672, 0.00794723816215992, 0.016268758103251457, -0.01589447632431984,
            -0.004241853952407837, -0.006393970921635628, 0.02979278564453125, 0.005904286168515682,
            -0.01705474779009819, -0.015981808304786682, -0.005190032999962568, -0.017828263342380524,
            0.017666073516011238, -0.02276877500116825, -0.004584944806993008, 0.01787816733121872,
            0.013686216436326504,
            -0.024016378447413445, 0.009781216271221638, -0.015333054587244987, -0.015707336366176605,
            -0.011796096339821815, -0.010211639106273651, -0.02991754561662674, -0.02279372699558735,
            -0.002796192653477192, 0.010161735117435455, 0.015382958576083183, -0.008284091018140316,
            -0.02595016546547413, -0.006624777801334858, -0.009332078509032726, -0.011833524331450462,
            0.027646906673908234, 0.0028445373754948378, 0.0077289072796702385, -0.017715977504849434,
            0.007286007981747389, 0.018077783286571503, -0.013561456464231014, 0.03049144335091114,
            -0.017840739339590073, -0.011365673504769802, -0.01016797311604023, -0.005046558566391468,
            -0.003908119630068541, -0.006562397349625826, 0.004812632687389851, -0.01449715904891491,
            0.006762014236301184, 0.027197768911719322, 0.007379577960819006, 0.011240912601351738,
            -0.007984666153788567, 0.005891810171306133, -0.007310959976166487, -0.021084509789943695,
            -0.004282400943338871, -0.0093383165076375, 0.010947725735604763, -0.026449207216501236,
            -0.01821501925587654, 0.013436696492135525, -0.017104651778936386, -0.01833977922797203,
            -0.002936548087745905, 0.014709251932799816, -0.002520160283893347, 0.0023252221290022135,
            -0.018177591264247894, 0.0014246079372242093, -0.018165115267038345, -0.029518311843276024,
            0.0034153161104768515, -0.017079699784517288, 0.025076841935515404, 0.02406628243625164,
            -0.012850321829319,
            -0.01062958687543869, 0.0003391923673916608, 0.005292960442602634, -0.008390137925744057,
            -0.020161282271146774, 0.007229865528643131, -0.009070081636309624, 0.0015096009010449052,
            -0.022057639434933662, -0.0021209269762039185, -0.026199685409665108, 0.00018801783153321594,
            -0.024565324187278748, -0.008776894770562649, -0.023629620671272278, 0.01681770384311676,
            -0.014185258187353611, -0.02360466867685318, 0.0039549050852656364, -0.020136330276727676,
            -0.0013014069991186261, 0.0009294650517404079, -0.008627181872725487, 0.006992821116000414,
            0.002498327288776636, -0.016555706039071083, -0.010118069127202034, -0.004316709935665131,
            -0.02150869369506836, -0.0062380204908549786, 0.013237079605460167, -0.003917476627975702,
            0.02989259362220764, 0.23534803092479706, -0.00578576372936368, 0.0031018557492643595,
            0.03608071058988571,
            -0.003889405634254217, 0.024003902450203896, 0.024028854444622993, -0.00732967397198081,
            -0.013174699619412422, 0.0251267459243536, -0.0012608598917722702, 0.008015856146812439,
            -0.01648085005581379, 0.006774490233510733, 0.014110402204096317, 0.011384387500584126,
            -0.008483707904815674, 0.0015002439031377435, -0.01524572167545557, -0.03278703615069389,
            -0.012656943872570992, -0.006762014236301184, -0.016206376254558563, -0.004366614390164614,
            0.008945321664214134, 0.010560968890786171, -0.005174438003450632, 0.0035587907768785954,
            0.028470326215028763, 0.019188150763511658, -0.013711169362068176, -0.0030940582510083914,
            -0.006868060678243637, 0.022868582978844643, -0.013885833323001862, 0.004241853952407837,
            0.01789064332842827, 0.01512096170336008, 0.0029303100891411304, 0.0019525004317983985,
            0.0157572403550148,
            0.0008974951924756169, -0.014160306192934513, -0.017965499311685562, 0.012176616117358208,
            0.02159602753818035, 0.012756751850247383, 0.001325579360127449, -0.009631503373384476,
            0.03096553310751915,
            -0.032662276178598404, 0.0008951559429988265, 0.0111036766320467, 0.02477741800248623,
            -0.0019493814324960113, 0.011764906346797943, 0.0262994933873415, 0.007510576397180557,
            0.013049938715994358,
            0.00205854675732553, 0.010648300871253014, 0.03423425555229187, -0.027721762657165527,
            0.006500017363578081,
            -0.009095033630728722, 0.014784108847379684, -0.015482766553759575, 0.0015680823707953095,
            -0.0045568738132715225, 0.006387732923030853, -0.01659313403069973, 0.0005310114938765764,
            -0.0026495992206037045, 0.004085903521627188, -0.002454661065712571, -0.030167067423462868,
            0.015470290556550026, 0.022619063034653664, 0.008608467876911163, 0.02420351840555668,
            -0.026698727160692215,
            0.01916319876909256, -0.007173723541200161, -0.013536504469811916, -0.007005297113209963,
            -0.017453981563448906, 0.009656455367803574, -0.0029505835846066475, -0.024677608162164688,
            -0.001943143317475915, 0.0004082004597876221, -0.02921888791024685, -0.00046434265095740557,
            -0.011995713226497173, -0.0014877679059281945, 0.002431268570944667, 0.008907892741262913,
            0.03026687540113926, -0.0002970857312902808, -0.005040320567786694, -0.03168914467096329,
            -0.04291757941246033, 0.005383411422371864, 0.004566230811178684, 0.009668931365013123,
            -0.0181027352809906,
            0.004747133702039719, -0.007859906181693077, 0.004198187962174416, -0.010018261149525642,
            -0.010242830030620098, -0.0037303362041711807, 0.005476981867104769, 0.0029973688069730997,
            0.005520648322999477, -0.006116379052400589, 0.0013988760765641928, -0.016967415809631348,
            -0.011546575464308262, -0.00674330024048686, 0.003652360988780856, -0.020647848024964333,
            -0.020373374223709106, 0.010199163109064102, 0.0016234448412433267, -0.026598919183015823,
            0.00940693449229002, 0.011328245513141155, -0.009082557633519173, -0.04239358752965927,
            0.014172782190144062,
            -0.02079755999147892, 0.018539397045969963, 0.0005321811186149716, -0.004541278816759586,
            -0.0021848666947335005, -0.007616622839123011, -0.008458755910396576, 0.007323435973376036,
            0.018514445051550865, 0.014135354198515415, 0.005202508997172117, -0.010723156854510307,
            0.017553789541125298, 0.010560968890786171, -0.036155566573143005, 0.016505802050232887,
            -0.0054738628678023815, -0.02441561222076416, -0.013573932461440563, -0.017728453502058983,
            0.004831346683204174, -0.0043759713880717754, -0.011253388598561287, 0.03188876062631607,
            -0.03248761221766472, -0.011097438633441925, -0.02966802567243576, 0.004388447385281324,
            0.010997629724442959, -0.02886955812573433, -0.009562885388731956, 0.001766919274814427,
            -0.009675169363617897, -0.01559505145996809, -0.013561456464231014, -0.15829600393772125,
            -0.0035431955475360155, 0.015507718548178673, 0.006353423930704594, -0.008964035660028458,
            -0.010367590002715588, 0.040472276508808136, -0.020161282271146774, -0.028120996430516243,
            -0.013224603608250618, 0.012120474129915237, -0.0013653467176482081, -0.04027266055345535,
            -0.0016172068426385522, -0.023779334500432014, 0.005645408295094967, -0.023330196738243103,
            0.010080641135573387, 0.014646871946752071, 0.000837454223074019, 0.0078786201775074,
            -0.00865213479846716,
            0.018140163272619247, -0.0045038508251309395, -0.004191949963569641, 0.023879142478108406,
            -0.00922603253275156, 0.00805952213704586, -0.012257710099220276, -0.014185258187353611,
            -0.02767185866832733, -0.019662240520119667, -0.00892660766839981, -0.011247150599956512,
            -0.006687157787382603, 0.006375256925821304, -0.0056890747509896755, 0.001538451761007309,
            -0.020585468038916588, 0.031714096665382385, 0.022244781255722046, 0.04601163789629936,
            0.022257257252931595,
            0.01115981861948967, -0.0027587644290179014, 0.007036487106233835, 0.002510803285986185,
            0.02089736796915531,
            0.0056142183020710945, -0.0070926290936768055, -0.01680522784590721, -0.010317686013877392,
            0.022718871012330055, -0.004962345119565725, 0.004104617517441511, 0.005567433312535286,
            -0.004856299143284559, 0.01821501925587654, -0.012656943872570992, 0.014447255060076714,
            -0.016181424260139465, -0.01952500455081463, 0.002944345586001873, 0.0021178079769015312,
            -0.030192019417881966, -0.01670541800558567, -0.02361714467406273, 0.02522655390202999,
            -0.03166419267654419,
            -0.012762989848852158, -0.0006588909309357405, -0.005770168732851744, 0.013212127611041069,
            0.009619027376174927, -0.009993309155106544, 0.01530810259282589, -0.022731347009539604,
            0.004397804383188486, 0.003802073420956731, 0.01027402002364397, -0.004310471937060356,
            0.01243861299008131,
            -0.012214044108986855, -0.005651646293699741, 0.004921798128634691, -0.0029459050856530666,
            0.0005816954071633518, -0.003967381082475185, -0.003179830964654684, 0.0023657693527638912,
            -0.003986095078289509, -0.04304233938455582, -0.008496183902025223, -0.019999094307422638,
            0.0036554799880832434, 0.01554514653980732, 0.017666073516011238, 0.0004284740425646305,
            0.004166997503489256, 0.007067677099257708, -0.021945355460047722, -0.008751942776143551,
            -0.024739988148212433, 0.009662693366408348, 0.012001951225101948, 0.01512096170336008,
            0.024141138419508934,
            0.015707336366176605, 0.02231963723897934, -0.004048475064337254, -0.00532103143632412,
            0.024789893999695778,
            0.009893500246107578, 0.02056051604449749, -0.002091296250000596, -0.009088795632123947,
            0.006468827370554209, -0.004918679129332304, -9.771274199010804e-05, -0.008103188127279282,
            0.07066429406404495, 0.0005095683154650033, -0.026499111205339432, -0.004519445821642876,
            -0.009625265374779701, 0.022506777197122574, -0.10419989377260208, -0.02979278564453125,
            0.00420442596077919,
            0.007853668183088303, -0.006774490233510733, 0.015732288360595703, -0.007591670844703913,
            0.0035026485566049814, 0.006805680226534605, 0.021558599546551704, 0.010242830030620098,
            -0.0003674583858810365, -0.00028227042639628053, -0.026199685409665108, 0.03236284852027893,
            0.006038403604179621, 0.030416587367653847, -0.006418922916054726, -0.02407875843346119,
            0.018289875239133835, -0.006300400476902723, 0.013049938715994358, -0.0012249912833794951,
            -0.023292768746614456, -0.02102212980389595, -0.004138926509767771, -0.036280326545238495,
            0.00835894700139761, -0.0014752917923033237, -0.0030457135289907455, 0.008221711032092571,
            -0.010897821746766567, 0.005583028309047222, -0.0027946331538259983, 0.008976511657238007,
            0.017079699784517288, 3.0483452064800076e-05, -0.011833524331450462, 0.018526921048760414,
            -0.015008676797151566, -0.0012881512520834804, -0.0026823487132787704, 0.010118069127202034,
            -0.023317720741033554, 0.023430004715919495, -0.004282400943338871, 0.016069140285253525,
            0.01845206506550312, -0.001513499766588211, -0.007111343089491129, -0.028071092441678047,
            -0.005913643166422844, -0.021645931527018547, -0.015582575462758541, 0.04593678191304207,
            0.009144937619566917, 0.014334971085190773, 0.02209506928920746, 0.00713005755096674,
            0.02032347023487091,
            0.016917511820793152, -0.011764906346797943, -0.009057605639100075, 0.03835134953260422,
            0.033111412078142166, -0.0037864784244447947, -0.021471265703439713, 0.005820073187351227,
            0.00807199813425541, -0.005330388434231281, -0.029019271954894066, 0.038725629448890686,
            -0.01028649602085352, 0.023991426452994347, -0.019350338727235794, 0.00038773196865804493,
            -0.015931904315948486, -0.03909991309046745, 0.01858930103480816, -0.007504338398575783,
            -0.020959747955203056, -0.023554764688014984, -0.0038987628649920225, -0.021209269762039185,
            0.025189125910401344, 0.016256282106041908, -0.014596967957913876, 0.02138393372297287,
            -0.003452744334936142, 0.006231782492250204, 0.008190521039068699, 0.012413660995662212,
            0.010386303998529911, -0.04653563350439072, -0.027272624894976616, 0.010904059745371342,
            0.004425875376909971, -0.005891810171306133, 0.002186426194384694, 0.015807144343852997,
            -0.018763964995741844, -0.01332441158592701, -0.04097132012248039, 0.016630562022328377,
            -0.013960689306259155, -0.013511552475392818, 0.018414637073874474, 0.011540337465703487,
            -0.014097926206886768, -0.018140163272619247, -0.011902143247425556, -0.0111036766320467,
            -0.006228663492947817, 0.003209461458027363, -0.014447255060076714, 0.008683324791491032,
            0.01634361408650875, -0.019787000492215157, 0.0035151245538145304, -0.01319965161383152,
            0.004460184834897518, 0.007591670844703913, 0.009606551378965378, -0.007785049732774496,
            0.021408885717391968, 0.0007193217170424759, -0.002899120096117258, -0.00017641900922171772,
            -0.002007083036005497, 0.012295138090848923, -0.028595086187124252, -0.011234674602746964,
            -0.01449715904891491, -0.04174483194947243, 0.006836870219558477, 0.025650739669799805,
            0.0014916666550561786, -0.013711169362068176, 0.004120212513953447, -0.00564228929579258,
            0.003792716423049569, 0.011265864595770836, -0.010978915728628635, -0.022856106981635094,
            0.00713005755096674, -0.039074961096048355, -0.03256246820092201, -0.004821989685297012,
            0.00023801946372259408, 0.0024702560622245073, 0.020510612055659294, 0.004142045509070158,
            0.017703501507639885, 0.020834987983107567, -0.01683017984032631, -0.007398292422294617,
            0.001146236201748252, -0.028120996430516243, 0.004909322131425142, -0.015919428318738937,
            -0.004098379518836737, -0.038625821471214294, 0.015071057714521885, -0.002375126350671053,
            0.013773549348115921, 0.026948248967528343, 0.015956856310367584, -0.0007544105756096542,
            0.0023501741234213114, -0.021758215501904488, 0.008471231907606125, -0.023529812693595886,
            -0.01286279782652855, 0.025975117459893227, 0.0034496253356337547, 0.008115665055811405,
            0.006624777801334858, -0.0023252221290022135, -0.0035151245538145304, 0.007173723541200161,
            -0.017678549513220787, 0.007834953255951405, 0.02919393591582775, -0.00709886709228158,
            -0.0049249171279370785, 0.017553789541125298, 0.020597944036126137, 0.00532103143632412,
            -0.02207011543214321, -0.022456873208284378, -0.002250365912914276, 0.023392576724290848,
            -0.0169299878180027, -0.0022534849122166634, -0.005361578427255154, 0.0021240459755063057,
            -0.013848405331373215, 0.00479079969227314, -0.02288105897605419, 0.006974106654524803,
            -0.005679717753082514, 0.012114236131310463, 0.0038582156412303448, -0.0016250043408945203,
            -0.01115981861948967, -0.02779661864042282, -0.0008928166935220361, 0.006992821116000414,
            -0.009600313380360603, -0.023554764688014984, -0.0014316256856545806, 0.006228663492947817,
            0.0006238020723685622, -0.02185802347958088, -0.011827286332845688, 0.015283149667084217,
            -0.010710680857300758, 0.033360932022333145, 0.0025341957807540894, -0.02852023020386696,
            -0.02906917594373226, 0.034883011132478714, 0.014784108847379684, 0.001349751721136272,
            0.024465516209602356,
            -0.00888917874544859, 0.010654538869857788, 0.005146367009729147, 0.01800292730331421,
            -0.033485691994428635,
            -0.029942497611045837, 0.009244746528565884, -0.013648788444697857, -0.002880405867472291,
            -0.0024094353429973125, 0.00812190305441618, -0.008514897897839546, -0.014222686178982258,
            0.010673252865672112, 0.03588109463453293, -0.009787454269826412, 0.05249917879700661,
            0.026424255222082138,
            -0.01717950776219368, -0.004597421269863844, 0.007429482415318489, 0.0049249171279370785,
            0.013848405331373215, 0.02476494200527668, -0.036280326545238495, -0.013000034727156162,
            0.004519445821642876, -0.004166997503489256, 0.010542254894971848, -0.02557588368654251,
            -0.015008676797151566, -0.022469349205493927, -0.03343578800559044, -0.014434779062867165,
            -0.009213556535542011, -0.015445338562130928, 0.019013486802577972, 0.0003068326332140714,
            0.015033629722893238, -0.0028071091510355473, -0.02430332824587822, -0.021446313709020615,
            0.026549015194177628, 0.002520160283893347, -0.0023610906209796667, -0.021645931527018547,
            -0.002995809307321906, 0.0016733489464968443, -0.02244439721107483, -0.007647812832146883,
            0.027172816917300224, -2.9581862690974958e-05, 0.01880139298737049, 0.013923261314630508,
            0.02487722598016262, -0.0031782714650034904, -0.00899522565305233, 0.010897821746766567,
            -0.015158389694988728, -0.008920369669795036, 0.018177591264247894, 0.04366614297032356,
            -0.027896426618099213, 0.021571075543761253, -0.03633023053407669]
    
    def __init__(self, path):
        self.pickle_path = path
        self.dim = -1
        if os.path.isfile(self.pickle_path):
            with open(self.pickle_path, 'rb') as fpp:
                self.db = pickle.load(fpp, encoding="bytes")
        else:
            self.db = [
                ("quick brown fox jump lazy dog", OpenAITextEmbeddingDB.arr1),
            ]
            self.commit()
        
        self.dim = len(self.db[0][1])
    
    def to_dict(self):
        db = dict()
        for text, embeddings in self.db:
            db[text] = embeddings
        return db
    
    def append(self, text, embedding):
        assert len(embedding) == self.dim
        self.db.append((text, embedding))
    
    def commit(self):
        with open(self.pickle_path, 'wb') as fpp:
            pickle.dump(self.db, fpp)
    
    def is_available(self, text):
        lll = len(self.query(text)) > 0
        return lll
    
    def query(self, text):
        lll = list(filter(lambda xy: xy[0] == text, self.db))
        return lll


class OpenAIModelProxy:
    def __init__(self, openai_emb_db, dtype="float64"):
        emb_db = OpenAITextEmbeddingDB(openai_emb_db)
        self.emb_dict = emb_db.to_dict()
        self.dim = emb_db.dim
        self.dtype = dtype
    
    def get_word_vector(self, text):
        v = self.emb_dict.get(text, None)
        if v is None:
            raise KeyError("Embedding value not found for '{}'".format(text))
        v = np.array(v, dtype=self.dtype)
        return v


def get_openai_api_key(path):
    with open(path, "r") as fp:
        for key, nickname in csv.reader(fp):
            yield key, nickname


class OpenAICredentialManager:
    """
    This singleton class read a working api key form a list of api-keys available as a simple csv file.
    It yields an endless flow of a valid openai api key. Background: The usage limit for an OpenAI API
    key is limited as described here: https://platform.openai.com/docs/guides/rate-limits/overview.
    This is useful, when users have a multiple OpenAI account to leverage the full potential of openai seamlessly.

    Save the file:
    openapi.apikey
        sk-x12x12x12x1******,user1
        sk-x12x12x12x1******,user2

    Example:
        cm = OpenAICredentialManager("openapi-key.csv")
        key, nickname = next(cm) # sk-x12x12x12x12xcc125221c223444XfYtyTYTgtYTYTyyTybb, user1

    """
    instance = None
    
    def __init__(self, path):
        if OpenAICredentialManager.instance is not None:
            raise Exception("'{}' is a singleton class!".format(self.__class__.__qualname__))
        OpenAICredentialManager.instance = self
        self.path = path
        self.nickname = None
        self.key = None
        self.keygen = get_openai_api_key(path)
        self.please_stop = False
        self.rate_limit_dict = dict()
    
    def set_limit_exhausted(self, nickname: str):
        if self.rate_limit_dict.get(nickname, None) is None:
            self.rate_limit_dict[nickname] = datetime.now()
    
    def is_limit_exhausted(self, nickname: str):
        a = self.rate_limit_dict.get(nickname, None)
        if a is None:
            return False
        b = datetime.now()
        c = b - a
        if c.microseconds > 600000:
            self.rate_limit_dict[nickname] = None
            return False
        else:
            return True
    
    def __iter__(self):
        return self
    
    def __next__(self):
        while True:
            if self.please_stop is True:
                break
            try:
                self.key, self.nickname = next(self.keygen)
            except StopIteration:
                self.keygen = get_openai_api_key(self.path)
                self.key, self.nickname = next(self.keygen)
            finally:
                print("Using openai API Key for: '{}'".format(self.nickname))
            return self.key, self.nickname


# IMPORTANT LINKS
# Lang Chain
#   https://python.langchain.com/en/latest/getting_started/getting_started.html
# CLIP
#   https://huggingface.co/docs/transformers/model_doc/clip
#   https://towardsdatascience.com/linking-images-and-text-with-openai-clip-abb4bdf5dbd2
# OPENAI
#   https://platform.openai.com/docs/models/overview
#   https://platform.openai.com/docs/guides/rate-limits/overview
#   https://platform.openai.com/account/rate-limits
#   https://platform.openai.com/docs/api-reference/models/list
#   https://platform.openai.com/docs/guides/moderation/quickstart


class OpenAITextLoader:
    """
    OpenAI API access is limited as describer here: https://platform.openai.com/docs/guides/rate-limits/overview.
    It limits user by Request Per Minute(RPM) and Token Per Minute(TPM). And this also varies as the choice of
    algorithm. Thus, to make the most out of the API service, we can preprocess the texts in chunks (as documents)
    before sending out to openapi. This way we can optimize the RPM and TPM.

    Now, OpenAITextLoader class provides an iterator wrapper over your textual data loader. In each iteration,
    it yields a list of text to send to OpenAI server for processing.
    Optionally, it sleeps for some time, precalculated, if and when needed to honor RPM and TPM. This behaviour
    could be controlled by setting a boolean flag 'auto_sleep=False'. To get the current sleep value(in mills)
    before making a next request can be accessed via 'self.sleep_milli' variable. It is recommended to use
    'auto_sleep=True'.
    """
    ONE_MINUTE_MILLS = 60000
    
    def __init__(self, dataloader, total_tokens=-1, total_sentence=-1, model_token_support=2000, rpm=3, tpm=150000,
                 auto_sleep=True,
                 throw_error=True,
                 truncate=False):
        """
        Default values for all the arguments are supported in Free Tire using 'ada' text tokenizer
        Args:
            dataloader: Dataloader is a generator to load textual data.
                        Please make sure to remove any duplicate sentence and,
                        stop words, symbols, and numbers etc. Otherwise,
                        it will end up wasting valuable OpenAI API quota.
            model_token_support: How many tokens you model can process in one shot.
                        As per openai, you can send approximately 200x more tokens per
                        minute to an 'ada' model versus a 'davinci' model.
            See: https://platform.openai.com/docs/models/overview

            rpm: How many RPM you are allowed to make.
            See: https://platform.openai.com/account/rate-limits

            tpm: How many TMP you are allowed to process.
            See: https://platform.openai.com/account/rate-limits

            auto_sleep: Set False to handle seep manually.
        """
        self.buffer = []
        self.dataloader = dataloader
        self.model_token_support = model_token_support
        self.rpm = rpm
        self.tpm = tpm
        # other variables
        self.auto_sleep = auto_sleep
        self.since = None
        # self.request_counter = 0
        self.token_counter = 0
        self.sleep_milli = int(OpenAITextLoader.ONE_MINUTE_MILLS / self.rpm) + 5
        self.residual_text = None
        # extra features
        self.throw_error = throw_error
        self.truncate = truncate
        if auto_sleep is False:
            print("Please sleep before between API calls")
        self.bulk_eta_min = -1
        self.single_eta_min = -1
        if total_tokens > 0:
            print("Estimated time to complete with one API KEY (bulk): ", end="")
            # m = model token support
            # t = total data tokens
            # tpm = tone per minute
            # required_requests = t / m
            # time_required_minute = required_requests / rpm
            self.bulk_eta_min = round((total_tokens / self.model_token_support) / self.rpm, 2)
            print(self.bulk_eta_min, end=" minute(s)\n")
        if total_sentence > 0:
            print("Estimated time to complete one API KEY (single): ", end="")
            # one request per sentence. total_req = total_sentence
            # estimated_min = total_sentence / rpm
            # time_required_minute = required_requests / rpm
            self.single_eta_min = round(total_sentence / rpm, 2)
            print(self.single_eta_min, end=" minute(s)\n")
    
    def sleep(self):
        if self.auto_sleep:
            print("Sleep for: {} sec".format(self.sleep_milli / 1000))
            time.sleep(self.sleep_milli / 1000)
    
    def __next__(self):
        """
        The iterator
        """
        print("Start Time:", datetime.now())
        while True:
            self.buffer.clear()
            tokens = 0
            just_started = False
            # calculate time difference in millisecond
            if self.since is None:
                # start timer
                self.since = datetime.now()
                just_started = True
            now = datetime.now()
            # # inter-call difference in milliseconds
            mills_diff = int((now - self.since).microseconds / 10)
            # if one minute is not over, but you have exhausted TPM, sleep
            if mills_diff < OpenAITextLoader.ONE_MINUTE_MILLS and self.token_counter >= self.tpm:
                print("TPM exhaust sleep. One minute is not over, but you have exhausted TPM, sleeps")
                self.token_counter = 0  # reset token counter
                self.since = datetime.now()  # reset timer
                self.sleep_milli = (OpenAITextLoader.ONE_MINUTE_MILLS - mills_diff) + 10
                self.sleep()
            else:
                if just_started is False:
                    print("Inter-request sleep to honour RPM")
                    self.sleep_milli = int(OpenAITextLoader.ONE_MINUTE_MILLS / self.rpm) + 5
                    self.sleep()
            # look for any residual text from previous iteration
            if self.residual_text is not None:
                print("Residual text retrival: '{}'".format(self.residual_text))
                # count the length of residual test
                tokens = len(self.residual_text)
                self.token_counter += tokens
                # append it to buffer
                self.buffer.append(self.residual_text)
                # check if we it
                self.residual_text = None
            # fetch new text
            for text in self.dataloader:
                # get the length of new text
                lent = len(text)
                if lent >= self.model_token_support:
                    # user asked to truncate the text
                    if self.truncate:
                        text = text[:self.model_token_support - 1]
                    else:
                        # user asked to throw error if not truncating
                        if self.throw_error:
                            raise ValueError(
                                "The text '{}' is larger than the model can process:{}".format(
                                    text, self.model_token_support)
                            )
                        else:
                            # user asked not to truncate but to skip silently
                            continue
                tokens += lent
                if tokens >= self.model_token_support:
                    self.residual_text = text
                    print("Residual text saved: '{}'".format(self.residual_text))
                    break
                else:
                    self.token_counter += lent
                    self.buffer.append(text)
            if len(self.buffer) > 0:
                yield self.buffer
            else:
                break
        print("End Time:", datetime.now())
